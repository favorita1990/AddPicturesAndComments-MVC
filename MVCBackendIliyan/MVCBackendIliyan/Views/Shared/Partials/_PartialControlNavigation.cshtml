@using MVCBackendIliyan.Context
@{
    MVCBackendDb db = new MVCBackendDb();
    var user = db.Users.Where(x => x.Email == User.Identity.Name).FirstOrDefault();
}

<div class="header">
    <nav class="navbar navbar-default">
        <!-- Brand and toggle get grouped for better mobile display -->
        <div class="navbar-header">
            <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
            <a class="navbar-brand" href="@Url.Action("Index", "Home")"><span>I</span>liyan's blog</a>
        </div>

        <!-- Collect the nav links, forms, and other content for toggling -->
        <div class="collapse navbar-collapse nav-wil" id="bs-example-navbar-collapse-1">
            <ul class="nav navbar-nav">
                <li @(ViewContext.RouteData.Values["Action"].ToString().Equals("Index") && ViewContext.RouteData.Values["Controller"].ToString().Equals("Home") ? "class=active" : "class=hvr-bounce-to-bottom")>
                    <a href="@Url.Action("Index", "Home")">Home</a>
                </li>
                <li @(ViewContext.RouteData.Values["Action"].ToString().Equals("Index") && ViewContext.RouteData.Values["Controller"].ToString().Equals("Gallery") ? "class=active" : "class=hvr-bounce-to-bottom")>
                    <a href="@Url.Action("Index", "Gallery")">Gallery</a>
                </li>
                <li @(ViewContext.RouteData.Values["Action"].ToString().Equals("Download") && ViewContext.RouteData.Values["Controller"].ToString().Equals("Gallery") ? "class=active" : "class=hvr-bounce-to-bottom")>
                    <a href="@Url.Action("Download", "Gallery")">Download</a>
                </li>
                <li @(ViewContext.RouteData.Values["Action"].ToString().Equals("Index") && ViewContext.RouteData.Values["Controller"].ToString().Equals("Forum") ? "class=active" : "class=hvr-bounce-to-bottom")>
                    <a href="@Url.Action("Index", "Forum")">Forum</a>
                </li>
            </ul>
            <div class="sign-in">
                <ul>
                    <li>
                        @if (Request.IsAuthenticated)
            {
            <a @(ViewContext.RouteData.Values["Action"].ToString().Equals("Index") && ViewContext.RouteData.Values["Controller"].ToString().Equals("Manage") ? "class=active" : "class=hvr-bounce-to-bottom") href="@Url.Action("Index", "Manage")">
                Hello @user.FirstName/
            </a>
                        }
                        else
                        {
                        <a @(ViewContext.RouteData.Values["Action"].ToString().Equals("Register") && ViewContext.RouteData.Values["Controller"].ToString().Equals("Account") ? "class=active" : "class=hvr-bounce-to-bottom") href="@Url.Action("Register", "Account")">
                            Register/
                        </a>
                        }
                    </li>
                    <li>
                        @if (Request.IsAuthenticated)
                        {
                            using (Html.BeginForm("LogOff", "Account", FormMethod.Post, new { id = "logoutForm" }))
                            {
                            @Html.AntiForgeryToken()
                                <a href="javascript:document.getElementById('logoutForm').submit()">Log off</a>
                            }
                        }
                        else
                        {
                        <a @(ViewContext.RouteData.Values["Action"].ToString().Equals("Login") && ViewContext.RouteData.Values["Controller"].ToString().Equals("Account") ? "class=active" : "class=hvr-bounce-to-bottom") href="@Url.Action("Login", "Account")">
                            Sign In
                        </a>
                        }
                    </li>
                </ul>
            </div>
        </div><!-- /.navbar-collapse -->
    </nav>
</div>